//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SatDownloadServiceTest.SatDownloadService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="SatDownloadService", ConfigurationName="SatDownloadService.SatDownloadServiceSoap")]
    public interface SatDownloadServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="SatDownloadService/DownloadRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceResponse))]
        SatDownloadServiceTest.SatDownloadService.TicketResponse DownloadRequest(string username, string password, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="SatDownloadService/DownloadRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<SatDownloadServiceTest.SatDownloadService.TicketResponse> DownloadRequestAsync(string username, string password, string from, string to);
        
        [System.ServiceModel.OperationContractAttribute(Action="SatDownloadService/GetTicketStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceResponse))]
        SatDownloadServiceTest.SatDownloadService.TicketResponse GetTicketStatus(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="SatDownloadService/GetTicketStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<SatDownloadServiceTest.SatDownloadService.TicketResponse> GetTicketStatusAsync(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="SatDownloadService/GetDownloadInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceResponse))]
        SatDownloadServiceTest.SatDownloadService.DownloadResponse GetDownloadInfo(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="SatDownloadService/GetDownloadInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<SatDownloadServiceTest.SatDownloadService.DownloadResponse> GetDownloadInfoAsync(string guid);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SatDownloadService")]
    public partial class TicketResponse : ServiceResponse {
        
        private Ticket ticketField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Ticket Ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
                this.RaisePropertyChanged("Ticket");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SatDownloadService")]
    public partial class Ticket : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid idField;
        
        private System.DateTime requestDateField;
        
        private string usernameField;
        
        private System.DateTime downdloadDateFromField;
        
        private System.DateTime downdloadDateToField;
        
        private string statusField;
        
        private string reasonField;
        
        private int totalFilesToDownloadField;
        
        private int totalDownloadedFilesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime RequestDate {
            get {
                return this.requestDateField;
            }
            set {
                this.requestDateField = value;
                this.RaisePropertyChanged("RequestDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime DowndloadDateFrom {
            get {
                return this.downdloadDateFromField;
            }
            set {
                this.downdloadDateFromField = value;
                this.RaisePropertyChanged("DowndloadDateFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime DowndloadDateTo {
            get {
                return this.downdloadDateToField;
            }
            set {
                this.downdloadDateToField = value;
                this.RaisePropertyChanged("DowndloadDateTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
                this.RaisePropertyChanged("Reason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int TotalFilesToDownload {
            get {
                return this.totalFilesToDownloadField;
            }
            set {
                this.totalFilesToDownloadField = value;
                this.RaisePropertyChanged("TotalFilesToDownload");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int TotalDownloadedFiles {
            get {
                return this.totalDownloadedFilesField;
            }
            set {
                this.totalDownloadedFilesField = value;
                this.RaisePropertyChanged("TotalDownloadedFiles");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SatDownloadService")]
    public partial class SatXml : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string externalIdField;
        
        private string documentField;
        
        private string fileAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
                this.RaisePropertyChanged("ExternalId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
                this.RaisePropertyChanged("Document");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string FileAddress {
            get {
                return this.fileAddressField;
            }
            set {
                this.fileAddressField = value;
                this.RaisePropertyChanged("FileAddress");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DownloadResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TicketResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SatDownloadService")]
    public abstract partial class ServiceResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string responseStatusField;
        
        private string responseMessageField;
        
        private string stackTraceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ResponseStatus {
            get {
                return this.responseStatusField;
            }
            set {
                this.responseStatusField = value;
                this.RaisePropertyChanged("ResponseStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResponseMessage {
            get {
                return this.responseMessageField;
            }
            set {
                this.responseMessageField = value;
                this.RaisePropertyChanged("ResponseMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
                this.RaisePropertyChanged("StackTrace");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="SatDownloadService")]
    public partial class DownloadResponse : ServiceResponse {
        
        private Ticket ticketField;
        
        private SatXml[] filesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Ticket Ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
                this.RaisePropertyChanged("Ticket");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public SatXml[] Files {
            get {
                return this.filesField;
            }
            set {
                this.filesField = value;
                this.RaisePropertyChanged("Files");
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SatDownloadServiceSoapChannel : SatDownloadServiceTest.SatDownloadService.SatDownloadServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SatDownloadServiceSoapClient : System.ServiceModel.ClientBase<SatDownloadServiceTest.SatDownloadService.SatDownloadServiceSoap>, SatDownloadServiceTest.SatDownloadService.SatDownloadServiceSoap {
        
        public SatDownloadServiceSoapClient() {
        }
        
        public SatDownloadServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SatDownloadServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SatDownloadServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SatDownloadServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SatDownloadServiceTest.SatDownloadService.TicketResponse DownloadRequest(string username, string password, string from, string to) {
            return base.Channel.DownloadRequest(username, password, from, to);
        }
        
        public System.Threading.Tasks.Task<SatDownloadServiceTest.SatDownloadService.TicketResponse> DownloadRequestAsync(string username, string password, string from, string to) {
            return base.Channel.DownloadRequestAsync(username, password, from, to);
        }
        
        public SatDownloadServiceTest.SatDownloadService.TicketResponse GetTicketStatus(string guid) {
            return base.Channel.GetTicketStatus(guid);
        }
        
        public System.Threading.Tasks.Task<SatDownloadServiceTest.SatDownloadService.TicketResponse> GetTicketStatusAsync(string guid) {
            return base.Channel.GetTicketStatusAsync(guid);
        }
        
        public SatDownloadServiceTest.SatDownloadService.DownloadResponse GetDownloadInfo(string guid) {
            return base.Channel.GetDownloadInfo(guid);
        }
        
        public System.Threading.Tasks.Task<SatDownloadServiceTest.SatDownloadService.DownloadResponse> GetDownloadInfoAsync(string guid) {
            return base.Channel.GetDownloadInfoAsync(guid);
        }
    }
}
